---
import type { Post } from '../lib/interfaces.ts'
import { filePath } from '../lib/blog-helpers'

export interface Props {
  post: Post
}

const { post } = Astro.props

let image = ''
// 优先使用 FeaturedImage
if (post.FeaturedImage && post.FeaturedImage.Url) {
  if (import.meta.env.DEV) {
    image = post.FeaturedImage.Url
  } else {
    try {
      image = filePath(new URL(post.FeaturedImage.Url))
    } catch (e) {
      console.error('FeaturedImage URL处理失败:', e);
      image = post.FeaturedImage.Url; // 使用原始URL作为备选
    }
  }
} 
// 如果没有 FeaturedImage，则使用 Cover
else if (post.Cover && post.Cover.Url) {
  if (import.meta.env.DEV) {
    image = post.Cover.Url
  } else {
    try {
      image = filePath(new URL(post.Cover.Url))
    } catch (e) {
      console.error('Cover URL处理失败:', e);
      image = post.Cover.Url; // 使用原始URL作为备选
    }
  }
}
// 如果既没有FeaturedImage也没有Cover，则使用文章中的第一张图片
else if (post.FirstImage && post.FirstImage.Url) {
  if (import.meta.env.DEV) {
    image = post.FirstImage.Url
  } else {
    try {
      image = filePath(new URL(post.FirstImage.Url))
    } catch (e) {
      console.error('FirstImage URL处理失败:', e);
      image = post.FirstImage.Url; // 使用原始URL作为备选
    }
  }
}

console.log(`文章[${post.Title}]最终使用的图片:`, image);
---

{
  image && (
    <div class="post-featured-image">
      <img src={image} alt="Featured image of the post" />
    </div>
  )
}

<style>
  .post-featured-image {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden; /* 确保内容不会溢出 */
  }
  .post-featured-image img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover; /* 确保图片按最短边比例填充 */
  }
</style>
